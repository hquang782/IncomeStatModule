/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rentmotorbike.incomestat_by_monrth.views;

import com.rentmotorbike.incomestat_by_monrth.dao.IncomeStatDAO;
import com.rentmotorbike.incomestat_by_monrth.models.IncomeStat;
import com.rentmotorbike.incomestat_by_monrth.models.User;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Objects;

/**
 * @author Hแบก Quang
 */
public class IncomeStatFrm extends javax.swing.JFrame {

    /**
     * Creates new form IncomeStatFrm
     */
    private User u;
    private String prod = "";

    public IncomeStatFrm(User user) {
        super("Income statistic");
        this.u = user;
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocation(400, 170);
        initComponents();
        ArrayList<IncomeStat> push = new IncomeStatDAO().getIncomeStat();
        ArrayList<String> time = new IncomeStatDAO().getPeriods();
        String[][] value = new String[time.size()][2];
        String[] columnNames = {"Month", "Income Statistic"};
        NumberFormat nf = NumberFormat.getNumberInstance();
        nf.setGroupingUsed(true);
        System.out.println(push.size());
        int temp = 0;

        for (int i = 0; i < 12; i++) {
            if (push.size() != temp && push.get(temp).getPeriod().equals(time.get(i))) {
                value[i][0] = push.get(temp).getPeriod();
                float amount = (float) Math.ceil(Float.parseFloat(String.valueOf(push.get(temp).getRevenue())));
                value[i][1] = nf.format(amount);
                temp += 1;
            } else {
                value[i][0] = time.get(i);
                value[i][1] = "0";
            }
        }
        DefaultTableModel tableModel = new DefaultTableModel(value, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tblStat.setModel(tableModel);

        tblStat.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            prod = (time.get(tblStat.getSelectedRow()));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbxPeriod = new javax.swing.JComboBox<>();
        btnConfirm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStat = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Income statistic");

        cbxPeriod.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 18)); // NOI18N
        cbxPeriod.setModel(new javax.swing.DefaultComboBoxModel<>(
                new IncomeStatDAO().getPeriods().toArray(new String[0])));
//                new String[] { "01/2022", "02/2022", "03/2022", "04/2022", "05/2022", "06/2022", "07/2022"
//                        , "08/2022", "09/2022", "10/2022", "11/2022", "12/2022" }));

        btnConfirm.setBackground(new java.awt.Color(51, 204, 255));
        btnConfirm.setFont(new java.awt.Font("Segoe UI", Font.PLAIN, 18)); // NOI18N
        btnConfirm.setText("confirm ");
        btnConfirm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        tblStat.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null}

                }

                ,
                new String[]{
                        "Month", "Total Income"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStat);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Choose period of time");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Income Statistic");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel1)
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)
                                                .addComponent(btnConfirm)
                                                .addGap(83, 83, 83))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2)
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cbxPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(btnConfirm))
                                .addGap(35, 35, 35)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        String time = Objects.requireNonNull(cbxPeriod.getSelectedItem()).toString();
//        System.out.println(time);
//        if (cbxPeriod.getSelectedItem().toString() != null) {
//            (new BillDetailFrm(time, u)).setVisible(true);
//            this.dispose();
//        } else {
//            JOptionPane.showMessageDialog(this, "This function is under construction!");
//        }
        if (!"".equals(prod)) {
            (new BillDetailFrm(prod, u)).setVisible(true);
            this.dispose();
        } else if (cbxPeriod.getSelectedItem().toString() != null) {
            System.out.println(time);
            (new BillDetailFrm(time, u)).setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "This function is under construction!");
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JComboBox<String> cbxPeriod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStat;
    // End of variables declaration//GEN-END:variables
}
